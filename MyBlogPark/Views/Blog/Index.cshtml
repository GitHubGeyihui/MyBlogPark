@*通过强类型视图显示*@
@model Blog
@{
    Layout = "~/Views/Blog/_Layout.cshtml";
    ViewBag.Title = Model.Title;
    var list = ViewBag.ArticleList as List<Article>;

    var totalCount = (int)ViewBag.TotalCount;
    var pageSize = (int)ViewBag.PageSize;

    var pageCount = totalCount / pageSize == 0 ? totalCount / pageSize :
        totalCount / pageSize + 1;
    var p = Convert.ToInt32(Request.QueryString["p"] ?? "1");

 }
@section scripts{
    <style>
        @@media only screen and (min-width: 1200px) {
            .blog-g-fixed {
                max-width: 1200px;
            }
        }

        @@media only screen and (min-width: 641px) {
            .blog-sidebar {
                font-size: 1.4rem;
            }
        }

        .blog-main {
            padding: 20px 0;
        }

        .blog-title {
            margin: 10px 0 20px 0;
        }

        .blog-meta {
            font-size: 14px;
            margin: 10px 0 20px 0;
            color: #222;
        }

            .blog-meta a {
                color: #27ae60;
            }

        .blog-pagination a {
            font-size: 1.4rem;
        }

        .blog-team li {
            padding: 4px;
        }

        .blog-team img {
            margin-bottom: 0;
        }

        .blog-content img,
        .blog-team img {
            max-width: 100%;
            height: auto;
        }

        .blog-footer {
            padding: 10px 0;
            text-align: center;
        }
    </style>
    @*日期插件的css及jQuery*@
    <style type="text/css">
        .Calendar {
            font-family: Verdana;
            font-size: 9pt;
            background-color: #EEE;
            text-align: center;
            padding: 10px;
            line-height: 1.5em;
        }

            .Calendar a {
                color: #0066CC;
            }

            .Calendar table {
                width: 100%;
                border: 0;
            }

                .Calendar table thead {
                    color: #acacac;
                }

                .Calendar table td {
                    font-size: 11px;
                    padding: 1px;
                }

        #idCalendarPre {
            cursor: pointer;
            float: left;
            padding-right: 5px;
        }

        #idCalendarNext {
            cursor: pointer;
            float: right;
            padding-right: 5px;
        }

        #idCalendar td.onToday {
            font-weight: bold;
            color: #C60;
        }

        #idCalendar td.onSelect {
            font-weight: bold;
        }
    </style>
    <script type="text/javascript">
        var $ = function (id) {
            return "string" == typeof id ? document.getElementById(id) : id;
        };
        var Class = {
            create: function () {
                return function () {
                    this.initialize.apply(this, arguments);
                }
            }
        }
        Object.extend = function (destination, source) {
            for (var property in source) {
                destination[property] = source[property];
            }
            return destination;
        }
        var Calendar = Class.create();
        Calendar.prototype = {
            initialize: function (container, options) {
                this.Container = $(container);//table结构容器
                this.Days = [];//日期列表
                this.SetOptions(options);
                this.Year = this.options.Year;
                this.Month = this.options.Month;
                this.SelectDay = this.options.SelectDay ? new Date(this.options.SelectDay) : null;
                this.onSelectDay = this.options.onSelectDay;
                this.onToday = this.options.onToday;
                this.onFinish = this.options.onFinish;
                this.Draw();
            },

            SetOptions: function (options) {
                this.options = {//默认值
                    Year: new Date().getFullYear(),
                    Month: new Date().getMonth() + 1,
                    SelectDay: null,//选择日期
                    onSelectDay: function () { },
                    onToday: function () { },
                    onFinish: function () { }
                };
                Object.extend(this.options, options || {});
            },
            //上月
            PreMonth: function () {
                //取得上月日期对象
                var d = new Date(this.Year, this.Month - 2, 1);
                //设置属性
                this.Year = d.getFullYear();
                this.Month = d.getMonth() + 1;
                //重绘日历
                this.Draw();
            },
            //下一个月
            NextMonth: function () {
                var d = new Date(this.Year, this.Month, 1);
                this.Year = d.getFullYear();
                this.Month = d.getMonth() + 1;
                this.Draw();
            },

            Draw: function () {
                //保存日期列表
                var arr = [];
                //用当月第一天在一周中的日期值作为当月离第一天的天数
                for (var i = 1, firstDay = new Date(this.Year, this.Month - 1, 1).getDay(); i <= firstDay; i++) { arr.push(" "); }
                //用当月最后一天在一个月中的日期值作为当月的天数
                for (var i = 1, monthDay = new Date(this.Year, this.Month, 0).getDate(); i <= monthDay; i++) { arr.push(i); }
                // /
                var frag = document.createDocumentFragment();
                this.Days = [];
                while (arr.length > 0) {
                    //每个星期插入一个tr
                    var row = document.createElement("tr");
                    //星期
                    for (var i = 1; i <= 7; i++) {
                        var cell = document.createElement("td");
                        cell.innerHTML = " ";
                        if (arr.length > 0) {
                            var d = arr.shift();
                            cell.innerHTML = d;
                            if (d > 0) {
                                this.Days[d] = cell;
                                //获取今日
                                if (this.IsSame(new Date(this.Year, this.Month - 1, d), new Date())) { this.onToday(cell); }
                                //判断用户是否作了选择
                                if (this.SelectDay && this.IsSame(new Date(this.Year, this.Month - 1, d), this.SelectDay)) { this.onSelectDay(cell); }
                            }
                        }
                        row.appendChild(cell);
                    }
                    frag.appendChild(row);
                }
                //此先清空然后再插入(ie的table不能用innerHTML)
                while (this.Container.hasChildNodes()) { this.Container.removeChild(this.Container.firstChild); }
                this.Container.appendChild(frag);
                this.onFinish();
            },
            //判断是否同一日
            IsSame: function (d1, d2) {
                return (d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate());
            }
        };
    </script>

}
@*@ViewBag.ArticleList*@
@if (list != null)
{
    for (int i = 0; i < list.Count; i++)
    {
        <article class="blog-main">
            <h3 class="am-article-title blog-title">
                <a href="/@Model.Identity/p/@(list[i].ID).html">@list[i].Title</a>
            </h3>
            <h4 class="am-article-meta blog-meta">发布于：@list[i].AddTime.ToString("yyyy-MM-dd")</h4>
            <div class="am-g blog-content">
                <div class="am-u-lg-12">
                    @if (i == 0)
                    {
                        @Html.Raw(list[i].Content)
                    }
                    else
                    {
                        @list[i].Discription
                    }
                </div>
            </div>
        </article>
        <hr class="am-article-divider blog-hr">
    }
}
<ul class="am-pagination blog-pagination">
    @if (p != 1)
    {
        <li class="am-pagination-prev"><a href="/@Model.Identity/@(p-1)">&laquo; 上一页</a></li>
    }
    @if (p < pageCount)
    {
        <li class="am-pagination-next"><a href="/@Model.Identity/@(p+1)">下一页 &raquo;</a></li>
    }
</ul>
